import PropTypes from 'prop-types'
import { Link } from 'react-router-dom'

// Local imports
import { translateCarName } from '../utils'

const fuelTypeTranslation = {
	ÌúòÎ∞úÏú†: '–ë–µ–Ω–∑–∏–Ω',
	Í≤ΩÏú†: '–î–∏–∑–µ–ª—å',
	LPG: '–ì–∞–∑ (LPG)',
	'ÌúòÎ∞úÏú†/LPGÍ≤∏': '–ë–µ–Ω–∑–∏–Ω/–ì–∞–∑ (LPG)',
	'ÌúòÎ∞úÏú†/CNGÍ≤∏': '–ë–µ–Ω–∑–∏–Ω/CNG',
	'ÌúòÎ∞úÏú† ÌïòÏù¥Î∏åÎ¶¨Îìú': '–ì–∏–±—Ä–∏–¥ (–ë–µ–Ω–∑–∏–Ω)',
	'LPG ÌïòÏù¥Î∏åÎ¶¨Îìú': '–ì–∏–±—Ä–∏–¥ (–ì–∞–∑ LPG)',
	'Í≤ΩÏú† ÌïòÏù¥Î∏åÎ¶¨Îìú': '–ì–∏–±—Ä–∏–¥ (–î–∏–∑–µ–ª—å)',
	Ï†ÑÍ∏∞: '–≠–ª–µ–∫—Ç—Ä–æ',
	CNG: '–ì–∞–∑ (CNG)',
	ÏàòÏÜå: '–í–æ–¥–æ—Ä–æ–¥',
}

const CarListItem = ({ car }) => {
	const formattedPrice = (
		car.price.replace(/\D+/gm, '') * 10000
	).toLocaleString()

	const formattedCarMileage = parseInt(
		car.mileage.replace(/\D+/gm, ''),
	).toLocaleString()

	const carYear = car.year.split('-')[0]
	const carMonth = car.year.split('-')[1]
	const formattedCarDate = `${carMonth}/${carYear}`
	const carId = car.link.split('/').pop() // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ URL
	const formattedTransmission =
		car.transmission === 'Ïò§ÌÜ†' ? '–ê–≤—Ç–æ–º–∞—Ç' : '–ú–µ—Ö–∞–Ω–∏–∫–∞'

	const formattedCarName = translateCarName(car?.name) || car?.name
	const formattedCarYear =
		car?.year.split('-')[1] + '/' + car?.year.split('-')[0]

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –≤ slug
	const generateSlug = (name, year) => {
		// –£–±–∏—Ä–∞–µ–º [—Å–∫–æ–±–∫–∏] –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
		let cleanName = name
			.replace(/\[.*?\]/g, '')
			.toLowerCase()
			.replace(/ÌÅ¥ÎûòÏä§/g, '') // –£–¥–∞–ª—è–µ–º "ÌÅ¥ÎûòÏä§"
			.replace(/x[0-9]+/gi, '') // –£–¥–∞–ª—è–µ–º X247 –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–µ—Ä–∏–∏
			.replace(/\s+/g, '-') // –ü—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –¥–µ—Ñ–∏—Å—ã

		// –ó–∞–º–µ–Ω—è–µ–º –∫–æ—Ä–µ–π—Å–∫–∏–µ –º–∞—Ä–∫–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ
		const brandTranslations = {
			Î≤§Ï∏†: 'benz',
			ÌòÑÎåÄ: 'hyundai',
			Í∏∞ÏïÑ: 'kia',
			Ï†úÎÑ§ÏãúÏä§: 'genesis',
			ÏâêÎ≥¥Î†à: 'chevrolet',
			Î•¥ÎÖ∏ÏΩîÎ¶¨ÏïÑ: 'renault-korea',
			KGÎ™®ÎπåÎ¶¨Ìã∞: 'kg-mobility',
		}
		Object.keys(brandTranslations).forEach((kor) => {
			cleanName = cleanName.replace(
				new RegExp(kor, 'g'),
				brandTranslations[kor],
			)
		})

		// –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –≥–æ–¥ –∏–∑ year
		const carYear = year.split('-')[0]

		// –§–∏–Ω–∞–ª—å–Ω—ã–π slug
		return `${cleanName}-${carYear}`
	}

	const slug = generateSlug(car.name, car.year)

	return (
		<div className='group relative bg-white rounded-lg overflow-hidden transition-all duration-300 border border-gray-100 hover:border-[#0e2cc2]/20'>
			{/* –ë–ª–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
			<Link
				to={`/catalog/${slug}/${carId}`}
				target='_blank'
				rel='noopener noreferrer'
				className='block'
			>
				<div className='relative w-full h-56 overflow-hidden'>
					<img
						src={car.image.replaceAll('"', '').replace('_TH', '')}
						alt={car.name}
						className='w-full h-full object-cover'
					/>
				</div>
			</Link>

			{/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
			<div className='p-4'>
				{/* –ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å */}
				<div className='flex justify-between items-start mb-2'>
					<h2 className='text-base font-medium text-[#0e2cc2] truncate max-w-[70%]'>
						{formattedCarName}
					</h2>
					<span className='text-xs font-medium text-gray-500 bg-gray-100 py-1 px-2 rounded-sm'>
						{formattedCarYear}
					</span>
				</div>

				{/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ - –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ */}
				<div className='grid grid-cols-2 gap-x-2 gap-y-1 text-xs text-gray-500 mt-2'>
					<span className='flex items-center gap-1'>
						<span className='text-gray-400'>üìÖ</span> {formattedCarDate}
					</span>
					<span className='flex items-center gap-1'>
						<span className='text-gray-400'>üöó</span> {formattedCarMileage} –∫–º
					</span>
					<span className='flex items-center gap-1'>
						<span className='text-gray-400'>‚õΩ</span>{' '}
						{fuelTypeTranslation[car.fuelType] || car.fuelType}
					</span>
					<span className='flex items-center gap-1'>
						<span className='text-gray-400'>‚öôÔ∏è</span> {formattedTransmission}
					</span>
				</div>

				{/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
				<div className='h-px w-full bg-gray-100 my-3'></div>

				{/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ */}
				<div className='flex justify-between items-center'>
					<span className='text-lg font-semibold text-[#0e2cc2]'>
						{formattedPrice} ‚Ç©
					</span>
					<Link
						to={`/catalog/${slug}/${carId}`}
						target='_blank'
						className='px-3 py-1.5 bg-[#0e2cc2] text-white 
						text-xs font-medium rounded-md transition-colors 
						duration-200 hover:bg-[#a330f0]'
					>
						–ü–æ–¥—Ä–æ–±–Ω–µ–µ
					</Link>
				</div>
			</div>
		</div>
	)
}

CarListItem.propTypes = {
	car: PropTypes.shape({
		link: PropTypes.string.isRequired,
		image: PropTypes.string.isRequired,
		name: PropTypes.string.isRequired,
		year: PropTypes.string.isRequired,
		mileage: PropTypes.string.isRequired,
		fuelType: PropTypes.string.isRequired,
		transmission: PropTypes.string.isRequired,
		price: PropTypes.string.isRequired,
	}).isRequired,
}

export default CarListItem
